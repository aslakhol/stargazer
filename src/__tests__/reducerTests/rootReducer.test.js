import rootReducer from '../../reducers/rootReducer';


describe('rootReducer', () => {
  describe('INITIAL_STATE', () => {
    it('is correct', () => {
      const action = { type: 'DUMMY_ACTION' };
      const initialState = { currentPerson: {}, modalOpen: false };

      expect(rootReducer(undefined, action)).toEqual(initialState);
    });
  });

  // This test is autogenerated by redux devtools
  describe('clicking on C-3PO card', () => {
    it('correctly updates state', () => {
      let state;
      state = rootReducer({ currentPerson: {}, modalOpen: false }, { type: 'SET_CURRENT_PERSON', data: { name: 'C-3PO', url: 'https://swapi.co/api/people/2/' } });
      expect(state).toEqual({ currentPerson: { name: 'C-3PO', url: 'https://swapi.co/api/people/2/' }, modalOpen: false });

      state = rootReducer({ currentPerson: { name: 'C-3PO', url: 'https://swapi.co/api/people/2/' }, modalOpen: false }, { type: 'OPEN_MODAL' });
      expect(state).toEqual({ currentPerson: { name: 'C-3PO', url: 'https://swapi.co/api/people/2/' }, modalOpen: true });
    });
  });
});
